---
title: "Blog Test"
format: html
jupyter: python3
engine: jupyter
kernel: pykep-env
---

```{python}
#| echo: true

import pykep as pk

earth = pk.planet.jpl_lp("earth")
mars = pk.planet.jpl_lp("mars")

dep = pk.epoch(10000)
arr = pk.epoch(10300)

r1, _ = earth.eph(dep)
r2, _ = mars.eph(arr)

tof = (arr.mjd2000 - dep.mjd2000) * 86400
lamb = pk.lambert_problem(r1, r2, tof, pk.MU_SUN)

lamb.get_v1()[0]
```

```{python}
#| echo: false
#| fig-width: 6
#| fig-height: 6

import matplotlib.pyplot as plt
import numpy as np

# Get velocity at departure and arrival
v1 = lamb.get_v1()[0]
v2 = lamb.get_v2()[0]

# Time of flight in seconds
N = 100  # points along the trajectory
dt = tof / N

# Propagate using basic Keplerian two-body motion
r = [r1]
v = [v1]

for i in range(1, N):
    # propagate one step (this uses Keplerian motion in PyKEP)
    new_r, new_v = pk.propagate_lagrangian(r[-1], v[-1], dt, pk.MU_SUN)
    r.append(new_r)
    v.append(new_v)

r = np.array(r)

# Plot the Lambert arc
plt.plot(r[:, 0], r[:, 1], label='Lambert Transfer Orbit')
plt.scatter(r1[0], r1[1], color='blue', label='Earth Position', zorder=5)
plt.scatter(r2[0], r2[1], color='red', label='Mars Position', zorder=5)

plt.xlabel('X [km]')
plt.ylabel('Y [km]')
plt.title('Lambert Transfer from Earth to Mars')
plt.axis('equal')
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()
```
